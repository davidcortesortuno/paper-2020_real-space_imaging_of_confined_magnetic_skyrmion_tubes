# MIF 2.2 

set PI [expr {4 * atan(1.)}]
set MU0 [expr {4 * $PI * 1e-7}]

# -----------------------------------------------------------------------------
# FeGe material

set Ms [expr {3.84e5}]
set A  [expr {8.78e-12}]
set D  [expr {1.58e-3}]
Parameter BZ [expr {0.1}]
Parameter Demag 1

Parameter XL [expr {1000e-9}]
Parameter YL [expr {100e-9}]
Parameter ZL [expr {1000e-9}]

Parameter xcell [expr {4e-9}]
Parameter ycell [expr {4e-9}]
Parameter zcell [expr {4e-9}]

Parameter BASENAME "./sk_tubes_FeGe/m"

# -----------------------------------------------------------------------------

SetOptions [subst {
    basename $BASENAME
    scalar_field_output_format {binary 8}
    scalar_field_output_meshtype rectangular
    vector_field_output_format {binary 8}
    vector_field_output_meshtype rectangular
}]

# -----------------------------------------------------------------------------

# BoxAtlas
Specify Oxs_BoxAtlas:atlas [subst {
  xrange {0 $XL}
  yrange {0 $YL}
  zrange {0 $ZL}
  name atlas
}]

# RectangularMesh
Specify Oxs_RectangularMesh:mesh [subst {
  cellsize {$xcell $ycell $zcell}
  atlas Oxs_BoxAtlas:atlas
}]

# -----------------------------------------------------------------------------

# UniformExchange
Specify Oxs_UniformExchange [subst {
  A $A
}]

# BulkDMI
Specify Oxs_DMI_T [subst {
  default_D $D
  atlas :atlas
  D {
    atlas atlas $D
  }
}]

# Demag
if {$Demag == 1} {
  Specify Oxs_Demag {}
}

Specify Oxs_FixedZeeman:Bfield [subst {
  comment {Field values in Tesla; scale to A/m}
  multiplier [expr {1 / $MU0}]
  field {0.0 0.0 $BZ}
}]

# -----------------------------------------------------------------------------

# CGEvolver
Specify Oxs_CGEvolve {}

# MinDriver
Specify Oxs_MinDriver [subst {
  evolver Oxs_CGEvolve
  stopping_mxHxm 0.01
  total_iteration_limit 1
  mesh :mesh
  Ms $Ms
  m0 { Oxs_ScriptVectorField {
     atlas :atlas
     script { dots }
     norm 1.0
     script_args { rawpt }
  }}
 
}]

Destination table mmArchive
Destination mags mmArchive

Schedule DataTable table Step 1000
Schedule Oxs_MinDriver::Magnetization mags Step 1

# =============================================================================

proc dots { x y z } {
    global XL
    global YL 
    global PI 

    set TOP_SEP [expr {50e-9}]
    set SK_XLEN [expr {75e-9}]
    set SK_SEP  [expr {10e-9}]
    set DOT_RAD [expr {40e-9}]
    set DOT_LEN [expr {600e-9}]
    set HEL_LEN [expr {70e-9}]

    set X1 [expr {$TOP_SEP + $SK_XLEN}]
    set X2 [expr {$TOP_SEP + 3 * $SK_XLEN + $SK_SEP}]
    set X3 [expr {$TOP_SEP + 5 * $SK_XLEN + 2 * $SK_SEP}]
    set Yi [expr {$YL * 0.5}] 

    foreach xsk [list $X1 $X2 $X3] ysk [list $Yi $Yi $Yi] {

        set xrel [expr {$x - $xsk}]
        set yrel [expr {$y - $ysk}]
        set radius [expr {sqrt($xrel * $xrel + $yrel * $yrel)}]

        if {$radius < $DOT_RAD && $z <= $DOT_LEN} { return [list 0 0 -1] }

    }
    
    return [list [expr {cos(2 * $PI * $z / $HEL_LEN)}] [expr {sin(2 * $PI * $z / $HEL_LEN)}] 0]
}
